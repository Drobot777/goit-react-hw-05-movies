{"version":3,"file":"static/js/680.e9fa0758.chunk.js","mappings":"+SAEMA,EAAS,2CACTC,EAAM,gCAECC,EAAoB,mCAAG,oGACZC,EAAAA,EAAAA,IAAA,UAAcF,EAAd,8BAAuCD,IAD3B,cAC5BI,EAD4B,yBAE3BA,GAF2B,2CAAH,qDAIpBC,EAAgB,mCAAG,WAAMC,GAAN,uFACRH,EAAAA,EAAAA,IAAA,UACjBF,EADiB,iBACLK,EADK,2BACgBN,IAFR,cACxBI,EADwB,yBAIvBA,GAJuB,2CAAH,sDAMhBG,EAAgB,mCAAG,WAAMD,GAAN,uFACRH,EAAAA,EAAAA,IAAA,UACjBF,EADiB,iBACLK,EADK,mCACwBN,IAFhB,cACxBI,EADwB,yBAIvBA,GAJuB,2CAAH,sDAMhBI,EAAgB,mCAAG,WAAMF,GAAN,uFACRH,EAAAA,EAAAA,IAAA,UACjBF,EADiB,iBACLK,EADK,0CAC+BN,IAFvB,cACxBI,EADwB,yBAIvBA,GAJuB,2CAAH,sDAMhBK,EAAoB,mCAAG,WAAMC,GAAN,uFACZP,EAAAA,EAAAA,IAAA,UACjBF,EADiB,8BACQS,EADR,sDAC0DV,IAF9C,cAC5BI,EAD4B,yBAI3BA,GAJ2B,2CAAH,qD,uJC1BjC,EAA4B,wBAA5B,EAA2D,mB,SCI9CO,EAAO,WAClB,IAAOC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA8BE,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KAkCA,OAhBAC,EAAAA,EAAAA,YACE,WACE,IAAMC,EAAO,mCAAG,8GAEWX,EAAAA,EAAAA,IAAkBK,GAF7B,OAENO,EAFM,OAIZH,GAAU,OAAMG,EAASC,KAAKC,OAJlB,gDAMZC,QAAQC,MAAR,MANY,yDAAH,qDASbL,GACD,GACD,CAACN,KAID,0BACE,wBAnCe,SAAAY,GACjB,GAAKA,GAAwB,IAAhBA,EAAKC,OAGlB,OAAOD,EAAKE,KAAK,SAACC,EAAIC,GACpB,OACE,2BACE,gBAAKC,IAAG,yCAAoCF,EAAGG,cAAgBC,IAAG,eAAUJ,EAAGjB,MAAQsB,MAAM,SAC7F,cAAGC,UAAWC,EAAd,SAA8BP,EAAGjB,QACjC,uCAEE,iBAAMuB,UAAWC,EAAjB,SAA4BP,EAAGQ,iBAL1BP,EASZ,GACF,CAmBQQ,CAAYrB,MAGtB,EC7CD,EAAyB,uBAAzB,EAAuD,qBCI1CsB,EAAU,WACrB,IAAOzB,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA8BE,EAAAA,EAAAA,UAAU,IAAxC,eAAOwB,EAAP,KAAgBC,EAAhB,KAgCA,OAhBAtB,EAAAA,EAAAA,YACE,WACE,IAAMC,EAAO,mCAAG,8GAEWV,EAAAA,EAAAA,IAAkBI,GAF7B,OAENO,EAFM,OAIZoB,GAAU,OAAMpB,EAASC,KAAKoB,UAJlB,gDAMZlB,QAAQC,MAAR,MANY,yDAAH,qDASbL,GACD,GACD,CAACN,KAID,yBACsB,IAAnB0B,EAAQb,QACL,oEACA,wBAnCc,SAAAD,GACpB,GAAKA,GAAwB,IAAhBA,EAAKC,OAGlB,OAAOD,EAAKE,KAAK,SAACC,EAAIC,GACpB,OACE,2BACE,eAAGK,UAAWC,EAAd,qBACS,iBAAMD,UAAWC,EAAjB,SAA4BP,EAAGc,aAExC,uBAAId,EAAGe,YAJAd,EAOZ,GACF,CAqBYe,CAAeL,MAI7B,EC5BUM,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAAC3C,EAAI4C,GAWvD,OARE5C,IAFF4C,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,EClBpB,EAA0B,8BAA1B,EAA+D,2BAA/D,EAAiG,2BAAjG,EAAuI,+BAAvI,EAAiL,+BAAjL,EAA4N,gCC2F5N,EApFqB,WAAO,IAAD,EAClBtC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA0BE,EAAAA,EAAAA,YAA1B,eAAOuC,EAAP,KAAcC,EAAd,KACIC,GAAWC,EAAAA,EAAAA,MACTC,GAAe,UAAAF,EAASG,aAAT,eAAgBC,OAAQ,IAC/CrC,QAAQsC,IAAIH,GACZnC,QAAQsC,IAAIL,EAASG,OA8DnB,OAhBAzC,EAAAA,EAAAA,YACE,WACE,IAAMC,EAAO,mCAAG,8GAEWb,EAAAA,EAAAA,IAAkBO,GAF7B,OAENO,EAFM,OAIZmC,EAAU,CAACnC,EAASC,OAJR,gDAMZE,QAAQC,MAAR,MANY,yDAAH,qDASbL,GACD,GACD,CAACN,KAID,4BACE,SAAC,KAAD,CACAiD,GAAKJ,EACHxB,UAAWC,EAFb,qBAMCmB,GArEgB,SAAA7B,GACnB,GAAoB,IAAhBA,EAAKC,QAAiBD,EAG1B,OAAOA,EAAKE,KAAK,SAAAC,GACf,IAAMmC,EAAO,IAAIC,KAAMpC,EAAGqC,cAC1B,OACE,4BACE,iBAAK/B,UAAWC,EAAhB,WACE,gBACEL,IAAG,yCAAoCF,EAAGsC,aAC1ClC,IAAKJ,EAAGuC,QACRjC,UAAWC,KAEb,4BACE,0BACGP,EAAGwC,MADN,IACcL,EAAKM,cADnB,QAIA,wCAAkC,GAAlBzC,EAAG0C,aAAnB,QACA,sCACA,uBAAI1C,EAAG2C,YACP,mCACC3C,EAAG4C,OAAO7C,KAAK,SAACC,EAAIC,GAAL,OACd,iBAAcK,UAAWC,EAAzB,SAAoCP,EAAGjB,MAA5BkB,EADG,WAKpB,iBAAKK,UAAWC,EAAhB,WACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAM2B,GAAG,OAAOH,MAAOH,EAASG,MAAOzB,UAAWC,EAAlD,mBADOU,MAGT,yBACE,SAAC,KAAD,CAAMiB,GAAG,UAAUH,MAAOH,EAASG,MAAOzB,UAAWC,EAArD,sBADOU,aA3BLA,IAmCb,GACF,CA0Ba4B,CAAcnB,IACxB,UAAC,KAAD,YACE,SAAC,KAAD,CAAOoB,KAAK,OAAOC,SAAS,SAAC/D,EAAD,OAC5B,SAAC,KAAD,CAAO8D,KAAK,UAAUC,SAAS,SAACrC,EAAD,WAItC,C","sources":["appi.js","webpack://react-homework-template/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.jsx","webpack://react-homework-template/./src/components/rewiers/Review.module.css?579d","components/rewiers/Review.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/movieDetails/MovieDetails.module.css?553c","components/movieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst kyeApi = 'api_key=f5f4430db74eddcea5cc6458a6f258ef';\nconst app = 'https://api.themoviedb.org/3/';\n\nexport const appiAxiosTrandingDay = async () => {\n  const respons = await axios.get (`${app}trending/movie/day?${kyeApi}`);\n  return respons;\n};\nexport const appiAxiosMovieID = async id => {\n  const respons = await axios.get (\n    `${app}movie/${id}?language=en-US&${kyeApi}`\n  );\n  return respons;\n};\nexport const appiAxiosCredits = async id => {\n  const respons = await axios.get (\n    `${app}movie/${id}/credits?language=en-US&${kyeApi}`\n  );\n  return respons;\n};\nexport const appiAxiosReviews = async id => {\n  const respons = await axios.get (\n    `${app}movie/${id}/reviews?language=en-US&page=1&${kyeApi}`\n  );\n  return respons;\n};\nexport const appiAxiosSearchMovie = async name => {\n  const respons = await axios.get (\n    `${app}search/movie?query=${name}&include_adult=false&language=en-US&page=1&${kyeApi}`\n  );\n  return respons;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"nameTitle\":\"Cast_nameTitle__kXu9U\",\"span\":\"Cast_span__jv2Ln\"};","import {useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {appiAxiosCredits} from 'appi';\nimport css from './Cast.module.css';\n\nexport const Cast = () => {\n  const {movieId} = useParams ();\n  const [objCats, setObjCats] = useState ();\n  const renderCast = arry => {\n    if (!arry || arry.length === 0) {\n      return;\n    }\n    return arry.map ((el, i) => {\n      return (\n        <li key={i}>\n          <img src={`https://image.tmdb.org/t/p/w500${el.profile_path}`} alt={`cast:${el.name}`} width=\"100\" />\n          <p className={css.nameTitle}>{el.name}</p>\n          <p>\n            Character:\n            <span className={css.span}>{el.character}</span>\n          </p>\n        </li>\n      );\n    });\n  };\n  useEffect (\n    () => {\n      const getUser = async () => {\n        try {\n          const response = await appiAxiosCredits (movieId);\n        \n          setObjCats ([...response.data.cast]);\n        } catch (error) {\n          console.error (error);\n        }\n      };\n      getUser ();\n    },\n    [movieId]\n  );\n\n  return (\n    <div>\n      <ul>{renderCast (objCats)}</ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"author\":\"Review_author__UEnTU\",\"span\":\"Review_span__w66JN\"};","import {useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {appiAxiosReviews} from 'appi';\nimport css from './Review.module.css';\n\nexport const Reviews = () => {\n  const {movieId} = useParams ();\n  const [reviews, setReviews] = useState ([]);\n  const renderReviews = arry => {\n    if (!arry || arry.length === 0) {\n      return;\n    }\n    return arry.map ((el, i) => {\n      return (\n        <li key={i}>\n          <p className={css.author}>\n            Author:<span className={css.span}>{el.author}</span>\n          </p>\n          <p>{el.content}</p>\n        </li>\n      );\n    });\n  };\n  useEffect (\n    () => {\n      const getUser = async () => {\n        try {\n          const response = await appiAxiosReviews (movieId);\n\n          setReviews ([...response.data.results]);\n        } catch (error) {\n          console.error (error);\n        }\n      };\n      getUser ();\n    },\n    [movieId]\n  );\n\n  return (\n    <div>\n      {reviews.length === 0\n        ? <p>We dont have any reviews for this movie</p>\n        : <ul>{renderReviews (reviews)}</ul>}\n\n    </div>\n  );\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"wrraper\":\"MovieDetails_wrraper__VTmzZ\",\"icon\":\"MovieDetails_icon__ODnDF\",\"span\":\"MovieDetails_span__WeEkK\",\"homeLink\":\"MovieDetails_homeLink__Cw2Lg\",\"castLink\":\"MovieDetails_castLink__JddQo\",\"container\":\"MovieDetails_container__zs+AX\"};","import {useEffect, useState} from 'react';\nimport {Link, useParams, useLocation, Routes, Route} from 'react-router-dom';\nimport {Cast} from 'components/cast/Cast';\nimport {Reviews} from 'components/rewiers/Review';\nimport {appiAxiosMovieID} from 'appi';\nimport {nanoid} from 'nanoid';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const {movieId} = useParams ();\n  const [movie, setMovie] = useState ();\nconst location = useLocation();\n  const backLinkHref = location.state?.from || \"/\";\nconsole.log(backLinkHref)\nconsole.log(location.state)\n  const rendersMovie = arry => {\n    if (arry.length === 0 || !arry) {\n      return;\n    }\n    return arry.map (el => {\n      const date = new Date (el.release_date);\n      return (\n        <div key={nanoid ()}>\n          <div className={css.wrraper}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${el.poster_path}`}\n              alt={el.tagline}\n              className={css.icon}\n            />\n            <div>\n              <h1>\n                {el.title}({date.getFullYear ()}\n                )\n              </h1>\n              <p> User Score:{el.vote_average * 10}%</p>\n              <h2>Overview</h2>\n              <p>{el.overview}</p>\n              <h3>Genres</h3>\n              {el.genres.map ((el, i) => (\n                <span key={i} className={css.span}>{el.name}</span>\n              ))}\n            </div>\n          </div>\n          <div className={css.container}>\n            <p>Additional information</p>\n            <ul>\n              <li key={nanoid ()}>\n                <Link to=\"cast\" state={location.state} className={css.castLink}>Cast</Link>\n              </li>\n              <li key={nanoid ()}>\n                <Link to=\"reviews\" state={location.state} className={css.castLink}>Reviews</Link>\n              </li>\n            </ul>\n\n          </div>\n        </div>\n      );\n    });\n  };\n\n  useEffect (\n    () => {\n      const getUser = async () => {\n        try {\n          const response = await appiAxiosMovieID (movieId);\n\n          setMovie ([response.data]);\n        } catch (error) {\n          console.error (error);\n        }\n      };\n      getUser ();\n    },\n    [movieId]\n  );\n\n  return (\n    <div>\n      <Link\n      to= {backLinkHref}\n        className={css.homeLink}\n      >\n        Go back\n      </Link>\n      {movie && rendersMovie (movie)}\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["kyeApi","app","appiAxiosTrandingDay","axios","respons","appiAxiosMovieID","id","appiAxiosCredits","appiAxiosReviews","appiAxiosSearchMovie","name","Cast","movieId","useParams","useState","objCats","setObjCats","useEffect","getUser","response","data","cast","console","error","arry","length","map","el","i","src","profile_path","alt","width","className","css","character","renderCast","Reviews","reviews","setReviews","results","author","content","renderReviews","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","movie","setMovie","location","useLocation","backLinkHref","state","from","log","to","date","Date","release_date","poster_path","tagline","title","getFullYear","vote_average","overview","genres","rendersMovie","path","element"],"sourceRoot":""}